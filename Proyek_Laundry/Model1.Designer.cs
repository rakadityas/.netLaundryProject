//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_DetailTransaction_HeaderTransaction", "HeaderTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Project.HeaderTransaction), "DetailTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.DetailTransaction), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_DetailTransaction_PriceList", "PriceList", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Project.PriceList), "DetailTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.DetailTransaction), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_HeaderTransaction_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.User), "HeaderTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.HeaderTransaction), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_Review_PriceList", "PriceList", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.PriceList), "Review", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Review), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_Review_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.User), "Review", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Review), true)]

#endregion

namespace Project
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DatabaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DatabaseEntities object using the connection string found in the 'DatabaseEntities' section of the application configuration file.
        /// </summary>
        public DatabaseEntities() : base("name=DatabaseEntities", "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseEntities object.
        /// </summary>
        public DatabaseEntities(string connectionString) : base(connectionString, "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseEntities object.
        /// </summary>
        public DatabaseEntities(EntityConnection connection) : base(connection, "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DetailTransaction> DetailTransactions
        {
            get
            {
                if ((_DetailTransactions == null))
                {
                    _DetailTransactions = base.CreateObjectSet<DetailTransaction>("DetailTransactions");
                }
                return _DetailTransactions;
            }
        }
        private ObjectSet<DetailTransaction> _DetailTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HeaderTransaction> HeaderTransactions
        {
            get
            {
                if ((_HeaderTransactions == null))
                {
                    _HeaderTransactions = base.CreateObjectSet<HeaderTransaction>("HeaderTransactions");
                }
                return _HeaderTransactions;
            }
        }
        private ObjectSet<HeaderTransaction> _HeaderTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PriceList> PriceLists
        {
            get
            {
                if ((_PriceLists == null))
                {
                    _PriceLists = base.CreateObjectSet<PriceList>("PriceLists");
                }
                return _PriceLists;
            }
        }
        private ObjectSet<PriceList> _PriceLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Review> Reviews
        {
            get
            {
                if ((_Reviews == null))
                {
                    _Reviews = base.CreateObjectSet<Review>("Reviews");
                }
                return _Reviews;
            }
        }
        private ObjectSet<Review> _Reviews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DetailTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDetailTransactions(DetailTransaction detailTransaction)
        {
            base.AddObject("DetailTransactions", detailTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HeaderTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHeaderTransactions(HeaderTransaction headerTransaction)
        {
            base.AddObject("HeaderTransactions", headerTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PriceLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPriceLists(PriceList priceList)
        {
            base.AddObject("PriceLists", priceList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reviews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReviews(Review review)
        {
            base.AddObject("Reviews", review);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="DetailTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DetailTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DetailTransaction object.
        /// </summary>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        public static DetailTransaction CreateDetailTransaction(global::System.String transactionID, global::System.String productID)
        {
            DetailTransaction detailTransaction = new DetailTransaction();
            detailTransaction.TransactionID = transactionID;
            detailTransaction.ProductID = productID;
            return detailTransaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                if (_TransactionID != value)
                {
                    OnTransactionIDChanging(value);
                    ReportPropertyChanging("TransactionID");
                    _TransactionID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TransactionID");
                    OnTransactionIDChanged();
                }
            }
        }
        private global::System.String _TransactionID;
        partial void OnTransactionIDChanging(global::System.String value);
        partial void OnTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Int32> _Price;
        partial void OnPriceChanging(Nullable<global::System.Int32> value);
        partial void OnPriceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_DetailTransaction_HeaderTransaction", "HeaderTransaction")]
        public HeaderTransaction HeaderTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HeaderTransaction>("DatabaseModel.FK_DetailTransaction_HeaderTransaction", "HeaderTransaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HeaderTransaction>("DatabaseModel.FK_DetailTransaction_HeaderTransaction", "HeaderTransaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HeaderTransaction> HeaderTransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HeaderTransaction>("DatabaseModel.FK_DetailTransaction_HeaderTransaction", "HeaderTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HeaderTransaction>("DatabaseModel.FK_DetailTransaction_HeaderTransaction", "HeaderTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_DetailTransaction_PriceList", "PriceList")]
        public PriceList PriceList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PriceList>("DatabaseModel.FK_DetailTransaction_PriceList", "PriceList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PriceList>("DatabaseModel.FK_DetailTransaction_PriceList", "PriceList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PriceList> PriceListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PriceList>("DatabaseModel.FK_DetailTransaction_PriceList", "PriceList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PriceList>("DatabaseModel.FK_DetailTransaction_PriceList", "PriceList", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="HeaderTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HeaderTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HeaderTransaction object.
        /// </summary>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        public static HeaderTransaction CreateHeaderTransaction(global::System.String transactionID)
        {
            HeaderTransaction headerTransaction = new HeaderTransaction();
            headerTransaction.TransactionID = transactionID;
            return headerTransaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                if (_TransactionID != value)
                {
                    OnTransactionIDChanging(value);
                    ReportPropertyChanging("TransactionID");
                    _TransactionID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TransactionID");
                    OnTransactionIDChanged();
                }
            }
        }
        private global::System.String _TransactionID;
        partial void OnTransactionIDChanging(global::System.String value);
        partial void OnTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_DetailTransaction_HeaderTransaction", "DetailTransaction")]
        public EntityCollection<DetailTransaction> DetailTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DetailTransaction>("DatabaseModel.FK_DetailTransaction_HeaderTransaction", "DetailTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DetailTransaction>("DatabaseModel.FK_DetailTransaction_HeaderTransaction", "DetailTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_HeaderTransaction_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_HeaderTransaction_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_HeaderTransaction_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_HeaderTransaction_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DatabaseModel.FK_HeaderTransaction_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="PriceList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PriceList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PriceList object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        public static PriceList CreatePriceList(global::System.String productID)
        {
            PriceList priceList = new PriceList();
            priceList.ProductID = productID;
            return priceList;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductPrice
        {
            get
            {
                return _ProductPrice;
            }
            set
            {
                OnProductPriceChanging(value);
                ReportPropertyChanging("ProductPrice");
                _ProductPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductPrice");
                OnProductPriceChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductPrice;
        partial void OnProductPriceChanging(Nullable<global::System.Int32> value);
        partial void OnProductPriceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_DetailTransaction_PriceList", "DetailTransaction")]
        public EntityCollection<DetailTransaction> DetailTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DetailTransaction>("DatabaseModel.FK_DetailTransaction_PriceList", "DetailTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DetailTransaction>("DatabaseModel.FK_DetailTransaction_PriceList", "DetailTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Review_PriceList", "Review")]
        public EntityCollection<Review> Reviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Review>("DatabaseModel.FK_Review_PriceList", "Review");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Review>("DatabaseModel.FK_Review_PriceList", "Review", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Review")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Review : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Review object.
        /// </summary>
        /// <param name="reviewID">Initial value of the ReviewID property.</param>
        public static Review CreateReview(global::System.String reviewID)
        {
            Review review = new Review();
            review.ReviewID = reviewID;
            return review;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReviewID
        {
            get
            {
                return _ReviewID;
            }
            set
            {
                if (_ReviewID != value)
                {
                    OnReviewIDChanging(value);
                    ReportPropertyChanging("ReviewID");
                    _ReviewID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ReviewID");
                    OnReviewIDChanged();
                }
            }
        }
        private global::System.String _ReviewID;
        partial void OnReviewIDChanging(global::System.String value);
        partial void OnReviewIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reviews
        {
            get
            {
                return _Reviews;
            }
            set
            {
                OnReviewsChanging(value);
                ReportPropertyChanging("Reviews");
                _Reviews = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reviews");
                OnReviewsChanged();
            }
        }
        private global::System.String _Reviews;
        partial void OnReviewsChanging(global::System.String value);
        partial void OnReviewsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Review_PriceList", "PriceList")]
        public PriceList PriceList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PriceList>("DatabaseModel.FK_Review_PriceList", "PriceList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PriceList>("DatabaseModel.FK_Review_PriceList", "PriceList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PriceList> PriceListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PriceList>("DatabaseModel.FK_Review_PriceList", "PriceList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PriceList>("DatabaseModel.FK_Review_PriceList", "PriceList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Review_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_Review_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_Review_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_Review_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DatabaseModel.FK_Review_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static User CreateUser(global::System.String userID)
        {
            User user = new User();
            user.UserID = userID;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserPassword
        {
            get
            {
                return _UserPassword;
            }
            set
            {
                OnUserPasswordChanging(value);
                ReportPropertyChanging("UserPassword");
                _UserPassword = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserPassword");
                OnUserPasswordChanged();
            }
        }
        private global::System.String _UserPassword;
        partial void OnUserPasswordChanging(global::System.String value);
        partial void OnUserPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserEmail
        {
            get
            {
                return _UserEmail;
            }
            set
            {
                OnUserEmailChanging(value);
                ReportPropertyChanging("UserEmail");
                _UserEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserEmail");
                OnUserEmailChanged();
            }
        }
        private global::System.String _UserEmail;
        partial void OnUserEmailChanging(global::System.String value);
        partial void OnUserEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserAddress
        {
            get
            {
                return _UserAddress;
            }
            set
            {
                OnUserAddressChanging(value);
                ReportPropertyChanging("UserAddress");
                _UserAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserAddress");
                OnUserAddressChanged();
            }
        }
        private global::System.String _UserAddress;
        partial void OnUserAddressChanging(global::System.String value);
        partial void OnUserAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserPhoneNumber
        {
            get
            {
                return _UserPhoneNumber;
            }
            set
            {
                OnUserPhoneNumberChanging(value);
                ReportPropertyChanging("UserPhoneNumber");
                _UserPhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserPhoneNumber");
                OnUserPhoneNumberChanged();
            }
        }
        private global::System.String _UserPhoneNumber;
        partial void OnUserPhoneNumberChanging(global::System.String value);
        partial void OnUserPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_HeaderTransaction_Users", "HeaderTransaction")]
        public EntityCollection<HeaderTransaction> HeaderTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HeaderTransaction>("DatabaseModel.FK_HeaderTransaction_Users", "HeaderTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HeaderTransaction>("DatabaseModel.FK_HeaderTransaction_Users", "HeaderTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Review_Users", "Review")]
        public EntityCollection<Review> Reviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Review>("DatabaseModel.FK_Review_Users", "Review");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Review>("DatabaseModel.FK_Review_Users", "Review", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
